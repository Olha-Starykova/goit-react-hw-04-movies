{"version":3,"sources":["views/HomePage.js","views/MoviesPage.js","components/Cast.js","views/MovieDetailsPage.js","App.js","index.js"],"names":["HomePage","state","movies","a","axios","get","response","this","setState","data","results","map","movie","to","id","title","Component","MoviesPage","Cast","casts","movieId","props","match","params","console","log","cast","name","src","profile_path","alt","MovieDetailsPage","poster_path","backdrop_path","homepage","vote_average","overview","className","activeClassName","path","render","App","exact","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"wSA0CeA,E,4MAnCXC,MAAQ,CACJC,OAAQ,I,8FAIhB,4BAAAC,EAAA,sEAC8BC,IAAMC,IAAI,6FADxC,OACaC,EADb,OAGMC,KAAKC,SAAS,CAACN,OAAQI,EAASG,KAAKC,UAH3C,gD,0EASI,WAII,OACI,qCACI,gDAEA,6BACKH,KAAKN,MAAMC,OAAOS,KAAI,SAAAC,GAAK,OAExB,aADA,CACA,eACI,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADnCH,EAAME,gB,GA1BhBE,aCARC,EAJI,WACf,OAAQ,sQ,gBCgDGC,E,4MA3CXjB,MAAQ,CACFkB,MAAO,I,8FAQb,8BAAAhB,EAAA,6DAEQiB,EAAYb,KAAKc,MAAMC,MAAMC,OAA7BH,QAFR,SAKuBhB,IAAMC,IAAN,6CAAgDe,EAAhD,sDALvB,OAKMd,EALN,OAMEkB,QAAQC,IAAI,qBAAsBnB,EAASG,KAAKiB,MAC9CnB,KAAKC,SAAS,CAAEW,MAAOb,EAASG,KAAKiB,OAPzC,gD,0EAWA,WAEI,OAEI,qCACI,uCAAUnB,KAAKc,MAAMC,MAAMC,OAAOH,WAClC,6BACKb,KAAKN,MAAMkB,MAAMR,KAAI,SAAAe,GAAI,OAEtB,+BACI,4BAAIA,EAAKC,OACT,qBAAKC,IAAG,0CAAqCF,EAAKG,cAAgBC,IAAI,kBAFjEJ,EAAKZ,gB,GA/BnBE,aC4DJe,E,4MA5DX9B,MAAQ,CAEJ+B,YAAa,GACbC,cAAe,KACfC,SAAU,KACVC,aAAc,KACdC,SAAU,KACVrB,MAAO,KACPD,GAAI,M,8FAGZ,8BAAAX,EAAA,6DACYiB,EAAYb,KAAKc,MAAMC,MAAMC,OAA7BH,QACVI,QAAQC,IAAI,KAAKL,GAFnB,SAG8BhB,IAAMC,IAAN,6CAAgDe,EAAhD,8CAH9B,OAGad,EAHb,OAIIkB,QAAQC,IAAI,gBAAiBnB,EAASG,MACxCF,KAAKC,SAAL,eAAmBF,EAASG,OAL9B,gD,0EAQI,WAAU,IAELW,EAAYb,KAAKc,MAAMC,MAAMC,OAA7BH,QAED,OADRI,QAAQC,IAAI,SAAUL,GAGV,qCACK,uCAAWb,KAAKc,MAAMC,MAAMC,OAAOH,WAEpC,qBAAKQ,IAAKrB,KAAKN,MAAM+B,YAAaF,IAAI,KACtC,qBAAKF,IAAG,0CAAqCrB,KAAKN,MAAM+B,aAAeF,IAAI,KAC3E,6BAAKvB,KAAKN,MAAMc,QAChB,6BAAKR,KAAKN,MAAMmC,WAChB,6BAAK7B,KAAKN,MAAMkC,eAIf,6BACG,6BAAI,cAAC,IAAD,CAEAtB,GAAE,kBAAaN,KAAKN,MAAMa,GAAxB,SACFuB,UAAU,UACVC,gBAAgB,iBAJhB,sBAUR,cAAC,IAAD,CACIC,KAAK,wBAGLC,OAAQ,SAAAnB,GAAK,OAAI,cAAC,EAAD,eAAUA,c,GApDhBL,aCsChByB,EA1BH,kBACV,qCACE,+BACE,6BAAI,cAAC,IAAD,CACCC,OAAK,EACL7B,GAAG,IACJwB,UAAU,UACVC,gBAAgB,iBAJhB,oBAOJ,6BAAI,cAAC,IAAD,CACAzB,GAAG,UACHwB,UAAU,UACVC,gBAAgB,iBAHhB,yBAQN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACH,KAAK,IAAII,UAAW3C,IACjC,cAAC,IAAD,CAAOuC,KAAK,mBAAmBI,UAAWZ,IAC1C,cAAC,IAAD,CAAOQ,KAAK,UAAUI,UAAW1B,IACjC,cAAC,IAAD,CAAO0B,UAAW3C,WCjCxB4C,IAASJ,OACP,cAAC,IAAMK,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.779aae00.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport  axios  from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass HomePage extends Component  {\r\n    state = {\r\n        movies: []\r\n    }\r\n    \r\n    \r\nasync  componentDidMount() {\r\n       const response = await axios.get('https://api.themoviedb.org/3/trending/movie/week?api_key=8d4e0a5a0c37d4780eefdf617d0feea1')\r\n \r\n      this.setState({movies: response.data.results})\r\n    }\r\n\r\n\r\n\r\n    \r\n    render() {\r\n        \r\n   // console.log(this.props.match.url)\r\n\r\n        return (\r\n            <>\r\n                <h1>Trending today</h1>\r\n        \r\n                <ul>\r\n                    {this.state.movies.map(movie => (\r\n                        // <li key={movie.id}>{ movie.title}</li> перенаправляем по динамическому параметру\r\n                        <li key={movie.id}>\r\n                            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst MoviesPage = () => {\r\n    return (<h1>Страница поиска фильмов по ключевому слову</h1>)\r\n}\r\n\r\nexport default MoviesPage;","import React, {Component} from 'react';\r\n import  axios  from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Cast extends Component  {\r\n  \r\n    state = {\r\n          casts: []\r\n// character: '',\r\n// id: null,\r\n// name: \"\",\r\n// popularity: null,\r\n// profile_path: \"\",\r\n    };\r\n//динамический раут\r\n    async componentDidMount() {\r\n     \r\n    const { movieId } = this.props.match.params;\r\n   // console.log('cast', movieId)\r\n\r\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`)\r\n      console.log(\"response.data.cast\", response.data.cast)\r\n        this.setState({ casts: response.data.cast })\r\n    };\r\n     \r\n    \r\n    render() {\r\n     \r\n        return (\r\n               \r\n            <>\r\n                <h1>cast {this.props.match.params.movieId}</h1>\r\n                <ul>\r\n                    {this.state.casts.map(cast => (\r\n                                \r\n                        <li key={cast.id}>\r\n                            <p>{cast.name}</p>\r\n                            <img src={`https://image.tmdb.org/t/p/w200/${cast.profile_path}`} alt='{cast.name}' />\r\n                           \r\n                        </li>\r\n                                             \r\n                    ))}\r\n                </ul>\r\n              \r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Cast;","import React, {Component} from 'react';\r\n import  axios  from 'axios';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n import Cast from '../components/Cast'\r\n\r\nclass MovieDetailsPage extends Component {\r\n    state = {\r\n        // movieDetails: [],\r\n        poster_path: '',\r\n        backdrop_path: null,\r\n        homepage: null,\r\n        vote_average: null,\r\n        overview: null,\r\n        title: null,\r\n        id: null\r\n    };\r\n//динамический раут\r\nasync  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n  console.log(\"id\",movieId)\r\n       const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`)\r\n    console.log(\"response.data\", response.data)\r\n  this.setState({ ...response.data})\r\n      }\r\n\r\n    render() {\r\n\r\n const { movieId } = this.props.match.params;\r\nconsole.log('render', movieId)\r\n        return (\r\n            \r\n            <>\r\n                 <h1>cast { this.props.match.params.movieId}</h1>\r\n               \r\n                <img src={this.state.poster_path} alt='' />\r\n                <img src={`https://image.tmdb.org/t/p/w200/${this.state.poster_path}`} alt='' />\r\n                <h2>{this.state.title}</h2>\r\n                <h2>{this.state.overview}</h2>\r\n                <h2>{this.state.vote_average}</h2>\r\n                \r\n                {/* //вложенный маршрут. кусочек страницы в компаниенты.  */}\r\n              \r\n                 <ul>\r\n                    <li><NavLink\r\n\r\n                        to={`/movies/${this.state.id}/cast`}\r\n                        className=\"NavLink\"\r\n                        activeClassName=\"NavLink-active\"\r\n                    >cast\r\n                       </NavLink>\r\n                    </li>\r\n                </ul> \r\n\r\n                <Route\r\n                    path=\"/movies/:movieId/cast\"\r\n                    //   path={`${this.props.match.path}`} \r\n\r\n                    render={props => <Cast {...props} />}\r\n                //  component={Cast} />\r\n             \r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDetailsPage; ","// '/' - компонент <HomePage>, домашняя страница со списком популярных кинофильмов.\n// '/movies' - компонент <MoviesPage>, страница поиска фильмов по ключевому слову.\n// '/movies/:movieId' - компонент <MovieDetailsPage>, страница с детальной информацией о кинофильме.\n// /movies/:movieId/cast - компонент <Cast>, информация о актерском составе. Рендерится на странице <MovieDetailsPage>.\n// /movies/:movieId/reviews - компонент <Reviews>, информация об обзорах. Рендерится на странице <MovieDetailsPage>.\n\nimport React from 'react';\nimport { Route, NavLink, Switch} from 'react-router-dom';\n import HomePage from './views/HomePage';\nimport MoviesPage from './views/MoviesPage';\nimport './styles.css'\nimport MovieDetailsPage from './views/MovieDetailsPage'\n\n\n\n\n\nconst App = () =>\n  <>\n    <ul>\n      <li><NavLink\n           exact\n           to='/'\n          className=\"NavLink\"\n          activeClassName=\"NavLink-active\"\n         >Home\n         </NavLink></li>\n      <li><NavLink\n          to='/movies'\n          className=\"NavLink\"\n          activeClassName=\"NavLink-active\"\n        >Movies\n         </NavLink></li>\n    </ul>\n\n    <Switch>\n      <Route exact path='/' component={HomePage} />\n      <Route path='/movies/:movieId' component={MovieDetailsPage} />\n      <Route path='/movies' component={MoviesPage} />\n      <Route component={HomePage} />\n    </Switch>\n  </>\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}